# Default values for behave-crawler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
# IMPORTANT NOTE
#
# This chart inherits from k8s-at-home common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

controller:
  # -- Number of desired pods. Only one instance needed.
  replicas: 1

image:
  # -- image repository
  repository: eu.gcr.io/logical-sled-220910/strg/behave/crawler
  # -- image tag
  tag: ""

securityContext:
  capabilities:
    drop:
      # -- drop all privileges as we dont need them
      - ALL
  # -- set root fs to read only for security reasons
  readOnlyRootFilesystem: true
  # -- do not allow privilege escalation for security reasons
  allowPrivilegeEscalation: false
  # -- do not run as root for security reasons
  runAsNonRoot: true
  # -- run as user with <id>
  runAsUser: 1000

env:
  # -- The timezone in the container
  TZ: UTC
  # -- The app usage (crawler or blacklist)
  APP: "crawler"
  # -- The default node environment
  NODE_ENV: production
  # -- The node log level
  NODE_LOG_LEVEL: info
  # -- beHave client id used as logging reference aswel as for NATS message routing
  BEHAVE_CLIENT_ID: strg
  # -- The node application port
  PORT: "3000"
  # -- The postgres database name
  PGDATABASE: ""
  # -- The postgres host ip or FQDN
  PGHOST: ""
  # -- The postgres port to connect default to 5432
  PGPORT: "5432"
  # -- The postgres user
  PGUSER: ""
  # -- The postgres password
  PGPASSWORD: ""
  # -- The postgres number of connections
  PGMAXCON: "1"
  # -- The nats server address
  NATS_SERVER: ""
  # -- The nats user
  NATS_USER: ""
  # -- The nats password
  NATS_PASS: ""
  # -- The crawl interval in days
  CRAWL_INTERVAL: "14"

jobs:
  createDB:
    # -- The postgres admin user to setup the database - must be set!
    PGADMINUSER: ""
    # -- The postgres admin password to setup the database - must be set!
    PGADMINPASS: ""

  # disable probes as we dont have a tcp or udp port open currently
probes:
  liveness:
    enabled: false

  readiness:
    enabled: false

  startup:
    enabled: false

# disable service as we dont have a tcp or udp port open currently
service:
  main:
    enabled: false
